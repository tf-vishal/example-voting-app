services:
  vote:
    build:
      context: ./vote
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./vote:/usr/local/app
    networks:
      - front-tier
      - back-tier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
    depends_on:
      - redis

  result:
    build:
      context: ./result
      dockerfile: Dockerfile
    entrypoint: nodemon --inspect=0.0.0.0 server.js
    ports:
      - "8081:80"
      - "127.0.0.1:9229:9229"  # Debug port
    volumes:
      - ./result:/usr/local/app
    networks:
      - front-tier
      - back-tier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - db

  
  worker:
    build:  
      context: ./worker
      dockerfile: Dockerfile
    depends_on:
      - redis
      - db
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  redis:
    image: redis:latest
    volumes:
      - ./healthcheck:/healthchecks
    healthcheck:
      test: /healthchecks/redis.sh
      interval: 5s
    networks:
      - back-tier

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./healthcheck:/healthchecks
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: 5s
    networks:
      - back-tier

  seed:
    build: ./seed-data
    profiles: ["seed"]
    depends_on:
      vote:
        condition: service_healthy 
    networks:
      - front-tier
    restart: "no"


networks:
  front-tier:
  back-tier:

volumes:
  db-data: